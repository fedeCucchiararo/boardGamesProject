{"ast":null,"code":"'use strict';\n\nvar DATA = require('../data/Countries.json');\n\nvar _ = require('underscore');\n\nvar Responder = require('./Responder');\n\nvar findByString = function findByString(prop, value) {\n  var filtered = _.filter(DATA, function (c) {\n    if (_.isEqual(c[prop], value)) {\n      return c;\n    }\n  });\n\n  return Responder(filtered);\n};\n\nvar findInArray = function findInArray(prop, value) {\n  var filtered = _.filter(DATA, function (c) {\n    if (_.contains(c[prop], value)) {\n      return c;\n    }\n  });\n\n  return Responder(filtered);\n};\n\nvar findArrayMultiple = function findArrayMultiple(prop, value) {\n  var filtered = _.filter(DATA, function (c) {\n    return _(c[prop]).values().some(function (v) {\n      return v === value;\n    });\n  });\n\n  return Responder(filtered);\n};\n\nvar findArrayIndex = function findArrayIndex(prop, value, index) {\n  var filtered = _.filter(DATA, function (c) {\n    if (_.isEqual(c[prop][index], value)) {\n      return c;\n    }\n  });\n\n  return Responder(filtered);\n};\n\nvar findArrayEqual = function findArrayEqual(prop, values) {\n  var filtered = _.filter(DATA, function (c) {\n    if (_.isEqual(c[prop], values)) {\n      return c;\n    }\n  });\n\n  return Responder(filtered);\n};\n\nvar findInObject = function findInObject(prop, value, index) {\n  var match = {};\n  match[value] = true;\n\n  var filtered = _.filter(DATA, function (val) {\n    return match[val[prop][index]];\n  });\n\n  return Responder(filtered);\n};\n\nvar findAll = function findAll() {\n  return Responder(DATA);\n};\n\nmodule.exports = {\n  findByString: findByString,\n  findArrayEqual: findArrayEqual,\n  findArrayIndex: findArrayIndex,\n  findArrayMultiple: findArrayMultiple,\n  findInArray: findInArray,\n  findInObject: findInObject,\n  findAll: findAll\n};","map":null,"metadata":{},"sourceType":"script"}